module tb_aes_top;
// Inputs
reg clk_sys;
reg rst_n;
reg [127:0] text_in;
reg [127:0] key_in;
reg aes_en;
// Outputs
wire [127:0] text_out;
wire aes_ready;
wire [127:0] key_out;

   aes_top dut (
      .clk_sys(clk_sys),
      .rst_n(rst_n),
      .text_in(text_in),
      .key_in(key_in),
      .text_out(text_out),
      .key_out(key_out),
      .aes_ready(aes_ready),
      .aes_en (aes_en)
   );

   initial begin
      $shm_open("wave.shm");
      clk_sys = 0;
      rst_n = 0;
      text_in = 0;
      key_in = 0;
      aes_en = 0;
   end

   initial begin
      forever #5 clk_sys = ~clk_sys;
   end
  
   initial begin
      #16
      rst_n = 1;
      #10
      aes_en = 1;
      text_in = 128'h00112233445566778899aabbccddeeff;
      key_in = 128'h000102030405060708090a0b0c0d0e0f;
      #10
      aes_en = 0;
      #500
      $finish;
   end

endmodule
